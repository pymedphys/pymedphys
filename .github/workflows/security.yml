name: security

on:
  workflow_call:
  schedule:
    - cron: "30 2 * * 1" # weekly
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  codeql:
    name: CodeQL
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: github/codeql-action/analyze@v3

  gitleaks:
    name: Gitleaks (artifact + SARIF)
    runs-on: ubuntu-24.04
    env:
      HAS_GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE != '' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # If license provided (org repos often need it), use pinned gitleaks action (v2.3.9)
      - name: Gitleaks action (licensed orgs)
        if: env.HAS_GITLEAKS_LICENSE == 'true'
        uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7 # v2.3.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      # Fallback: OSS CLI (no license required)
      - name: Setup Python/uv
        if: env.HAS_GITLEAKS_LICENSE != 'true'
        uses: ./.github/actions/setup-project
        with:
          python-version: "3.12"
          cache-key-suffix: gitleaks
      - name: Gitleaks CLI scan (OSS)
        if: env.HAS_GITLEAKS_LICENSE != 'true'
        shell: bash
        run: |
          uvx gitleaks --version || true
          uvx gitleaks detect --redact \
            --report-path gitleaks.sarif --report-format sarif || exit_code=$?
          # Upload SARIF even if leaks are found (exit code typically 1)
          echo "exit_code=${exit_code:-0}" >> $GITHUB_OUTPUT

      - name: Upload SARIF (CLI only)
        if: env.HAS_GITLEAKS_LICENSE != 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif

  ggshield:
    name: GitGuardian ggshield (optional)
    runs-on: ubuntu-24.04
    env:
      HAS_GG_KEY: ${{ secrets.GITGUARDIAN_API_KEY != '' }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        with:
          python-version: "3.12"
          cache-key-suffix: ggshield
      - name: Run ggshield if key exists
        if: env.HAS_GG_KEY == 'true'
        shell: bash
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        run: |
          uvx ggshield secret scan repo --show-secrets --exit-zero || true

  pip-audit:
    name: pip-audit (SARIF)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        with:
          python-version: "3.12"
          cache-key-suffix: pipaudit
      - name: Install runtime deps
        shell: bash
        run: |
          uv pip install -e . --system
      - name: Run pip-audit
        shell: bash
        run: |
          uvx pip-audit -f sarif -o pip-audit.sarif || true
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pip-audit.sarif
