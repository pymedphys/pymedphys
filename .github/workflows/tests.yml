name: "Tests (reusable)"

on:
  workflow_call:
    inputs:
      mode:
        required: false
        type: string
        default: "standard"
      python-matrix:
        required: false
        type: string
        default: '["3.10", "3.13"]'
      include-cypress:
        required: false
        type: boolean
        default: false
      extra-pytest-args:
        required: false
        type: string
        default: ""

permissions:
  contents: read

jobs:
  unit:
    name: unit (matrix)
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ${{ fromJSON(inputs['python-matrix']) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-project
        with:
          python-version: ${{ matrix.python-version }}
          extras: 'dev tests mosaiq'

      - name: Run pytest (mode-aware)
        shell: bash
        env:
          MODE: ${{ inputs.mode }}
          PYTEST_EXTRA: ${{ inputs.extra-pytest-args }}
        run: |
          set -euxo pipefail
          mkdir -p test-results
          if [[ "${MODE}" == "full" ]]; then
            uv run pytest ${PYTEST_EXTRA} --junitxml=test-results/junit-${{ matrix.os }}-${{ matrix.python-version }}.xml
          else
            uv run pytest -m "not slow" ${PYTEST_EXTRA} --junitxml=test-results/junit-${{ matrix.os }}-${{ matrix.python-version }}.xml
          fi

      - name: Upload JUnit XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.os }}-${{ matrix.python-version }}
          path: test-results/*.xml
          if-no-files-found: ignore

  doctests:
    if: ${{ inputs.mode == 'full' }}
    name: doctests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        with:
          extras: 'dev tests doctests'
      - run: uv run pymedphys dev doctests -v

  pyright:
    if: ${{ inputs.mode == 'full' }}
    name: type check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-project
        with:
          node-version: ''      # omit if no Node needed

      - name: Run pyright
        shell: bash
        run: |
          set -euxo pipefail
          uvx pyright

  slow:
    if: ${{ inputs.mode == 'full' }}
    name: slow tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-project
        with:
          extras: 'dev tests'

      - name: Run slow marker
        shell: bash
        run: |
          set -euxo pipefail
          uv run pytest -m slow -q

  propagate:
    if: ${{ inputs.mode == 'full' }}
    name: propagate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-project

      - name: Run propagate script if present
        shell: bash
        run: |
          set -euxo pipefail
          if [[ -x scripts/propagate.sh ]]; then
            bash scripts/propagate.sh
          elif [[ -x tools/propagate.sh ]]; then
            bash tools/propagate.sh
          else
            echo "No propagate script found, skipping."
          fi

  lint:
    if: ${{ inputs.mode == 'full' }}
    name: pylint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        with:
          extras: 'dev tests'
      - run: uv run pymedphys dev lint

  stackoverflow:
    if: ${{ inputs.mode == 'full' }}
    name: stackoverflow checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        with:
          extras: 'user'  # Match main branch
      - name: Run stackoverflow examples
        run: |
          # Run bash script if exists
          if [[ -x scripts/stackoverflow.sh ]]; then
            bash scripts/stackoverflow.sh
          fi
          # Also run Python example if exists
          if [[ -f examples/stackoverflow/gamma.py ]]; then
            uv run python examples/stackoverflow/gamma.py
          fi

  ui-e2e:
    if: ${{ inputs.mode == 'full' && inputs.include-cypress }}
    name: cypress e2e
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        with:
          extras: ''  # or minimal extras needed

      - name: Detect UI project
        id: detect
        shell: bash
        run: |
          if [[ -f package.json && -d cypress ]]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Node
        if: ${{ steps.detect.outputs.present == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install UI deps
        if: ${{ steps.detect.outputs.present == 'true' }}
        shell: bash
        run: |
          set -euxo pipefail
          if [[ -f package-lock.json ]]; then
            npm ci
          else
            npm install
          fi

      - name: Run Cypress headless
        if: ${{ steps.detect.outputs.present == 'true' }}
        shell: bash
        env:
          CI: "true"
        run: |
          set -euxo pipefail
          npx cypress run

  wheel-test:
    if: ${{ inputs.mode == 'full' }}
    name: wheel build test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
      - run: |
          uv build --wheel
          uv pip install dist/*.whl
          pymedphys --help
          python -c "import pymedphys"
