name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Optional: set up a default Python for tools that expect it.
      # uv can also manage its own Python, so this is not strictly required,
      # but keeping it helps non-uv tools (e.g., ruff, mypy) when run outside uv.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      # Install uv (fast Python package manager) for the runner.
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      # Restore uv cache to speed up dependency ops.
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      # Optionally ensure a Python is available via uv (honors .python-version/pyproject if present)
      # Skipped if you rely on actions/setup-python. Uncomment if you want uv-managed Python:
      # - name: Ensure Python via uv
      #   run: |
      #     uv python install

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: claude-opus-4-20250514
          # The action will execute only these commands when tools are invoked.
          allowed_tools: >
            View,
            Edit,
            Write,
            GlobTool,
            GrepTool,
            Bash(git status),
            Bash(git log),
            Bash(git log --oneline),
            Bash(git diff),
            Bash(git diff --staged),
            Bash(git diff HEAD),
            Bash(git branch),
            Bash(git branch -a),
            Bash(git remote -v),
            Bash(git config user.name),
            Bash(git config user.email),
            Bash(git fetch),
            Bash(git fetch origin),
            Bash(git checkout -b),
            Bash(git checkout),
            Bash(git branch -D),
            Bash(git merge),
            Bash(git add),
            Bash(git add .),
            Bash(git add -A),
            Bash(git commit -m),
            Bash(git commit --amend),
            Bash(git reset),
            Bash(git reset --hard),
            Bash(git push),
            Bash(git push origin),
            Bash(git push -u origin),
            Bash(gh auth status),
            Bash(gh pr create),
            Bash(gh pr create --title),
            Bash(gh pr list),
            Bash(gh pr view),
            Bash(gh pr comment),
            Bash(gh issue comment),
            Bash(uv pip install),
            Bash(uv pip install -e),
            Bash(uv pip install -r),
            Bash(uv venv),
            Bash(uv run),
            Bash(uv sync),
            Bash(uv lock),
            Bash(uv add),
            Bash(uv remove),
            Bash(uv tool install),
            Bash(uv tool run),
            Bash(uv run ruff check),
            Bash(uv run ruff check --fix),
            Bash(uv run ruff format),
            Bash(uv run pyright),
            Bash(uv run mypy),
            Bash(ls),
            Bash(ls -la),
            Bash(pwd),
            Bash(cat),
            Bash(head),
            Bash(tail),
            Bash(which),
            Bash(echo),
            mcp__github_file_ops__commit_files,
            mcp__github__create_pull_request
