[project]
name = "pymedphys"
version = "0.42.0-dev0"
description = "Medical Physics library"
readme = "README.rst"
requires-python = ">=3.10,<3.13"
license = { file = "LICENSE" }
authors = [
  { name = "PyMedPhys Contributors", email = "developers@pymedphys.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
]
dependencies = [
  "typing-extensions",
  "setuptools",
  "tomlkit",
]

[project.urls]
Homepage = "https://pymedphys.com"
Repository = "https://github.com/pymedphys/pymedphys"
Documentation = "https://docs.pymedphys.com"

[project.scripts]
pymedphys = "pymedphys.__main__:main"

[project.optional-dependencies]
user = [
  "Pillow",
  "PyYAML",
  "anthropic",
  "anyio",
  "attrs",
  "dash",
  "dbfread",
  "dicompyler-core",
  "imageio[tifffile]",
  "keyring",
  "matplotlib",
  "natsort",
  "numba",
  "numpy>=1.26",
  "packaging",
  "pandas>=1.0.0",
  "plotly",
  "pydicom>=2.0.0",
  "pylibjpeg-libjpeg>=1.3.2",
  "pymssql",
  "pynetdicom",
  "python-dateutil",
  "pywin32; sys_platform == 'win32' and python_version >= '3.10' and python_version < '3.13'",
  "requests",
  "scikit-learn",
  "scipy",
  "shapely>=1.7.0",
  "sqlalchemy",
  "streamlit~=1.34.0",
  "timeago",
  "toml",
  "tqdm",
  "trio",
  "trio-asyncio",
  "watchdog",
  "xmltodict",
]

dev = [
  "doc8",
  "pre-commit",
  "pyright",
  "readme-renderer",
  "rope",
  "ruff",
  "tabulate",
]

lint = [
  "astroid",
  "pylint",
  "ruff",
]

tests = [
  "anthropic",
  "astroid",
  "imageio",
  "matplotlib",
  "numba",
  "Pillow",
  "psutil",
  "pydicom>=2.0.0",
  "pynetdicom",
  "PyGithub",
  "pylibjpeg-libjpeg>=1.3.2",
  "pylint",
  "pytest",
  "pytest-rerunfailures",
  "pytest-sugar",
  "python-dateutil",
  "shapely",
  "tqdm",
]

docs = [
  "ipython>=7.31.1",
  "jupyter-book>=0.12.0,<2.0.0",
  "matplotlib",
  "networkx",
  "numba",
  "numpy",
  "pydicom",
  "scipy",
  "sphinx-argparse",
  "sphinx-book-theme",
  "toml",
  "tqdm",
]

doctests = [
  "ruff",
  "sphinx-book-theme",
  "tabulate",
]

# comparables = [
#     "flashgamma",
# ]

cli = [
    "toml",
]

dicom = [
    "pydicom>=2.0.0",
    "pynetdicom",
]

icom = [
    "numpy>=1.26",
]

mosaiq = [
    "attrs",
    "pandas>=1.0.0",
    "pymssql",
    "scikit-learn",
    "sqlalchemy",
    "toml",
]

propagate = [
    "ruff",
]

all = [
    "Pillow",
    "PyYAML",
    "anthropic",
    "anyio",
    "astroid",
    "attrs",
    "dash",
    "dbfread",
    "dicompyler-core",
    "doc8",
    "imageio[tifffile]",
    "ipython>=7.31.1",
    "jupyter-book>=0.12.0,<2.0.0",
    "keyring",
    "matplotlib",
    "natsort",
    "networkx",
    "numba",
    "numpy>=1.26",
    "packaging",
    "pandas>=1.0.0",
    "plotly",
    "pre-commit",
    "psutil",
    "pydicom>=2.0.0",
    "PyGithub",
    "pylibjpeg-libjpeg>=1.3.2",
    "pylint",
    "pymssql",
    "pynetdicom",
    "pyright",
    "pytest",
    "pytest-rerunfailures",
    "pytest-sugar",
    "python-dateutil",
    "pywin32; sys_platform == 'win32' and python_version >= '3.10' and python_version < '3.13'",
    "readme-renderer",
    "requests",
    "rope",
    "ruff",
    "scikit-learn",
    "scipy",
    "shapely>=1.7.0",
    "sphinx-argparse",
    "sphinx-book-theme",
    "sqlalchemy",
    "streamlit~=1.34.0",
    "tabulate",
    "timeago",
    "toml",
    "tqdm",
    "trio",
    "trio-asyncio",
    "watchdog",
    "xmltodict",
]

[tool.pymedphys.extra-groups]
# Groups are consumed by propagate_extras(); this table is authoritative.
# Each value lists EXTRA NAMES defined under [project.optional-dependencies].
dev   = ["tests", "docs", "cli", "propagate"]
docs  = ["docs"]
user  = ["user"]

# Optional aggregations if you want “full” exports in CI, etc.
full  = ["user", "tests", "docs", "doctests", "cli", "dicom", "icom", "mosaiq"]

[dependency-groups]
dev = [
  "sphinx-external-toc>=1.0.1",
]

[tool.hatch.build]
include = ["lib/pymedphys/docs/_build/html/**/*"]

[tool.hatch.build.targets.wheel]
packages = ["lib/pymedphys"]

# Existing tool config stays as-is
[tool.ruff.lint]
extend-ignore = ["E741", "E722", "F401"]  # example: match your current settings

[tool.ruff.lint.isort]
known-third-party = ["pymedphys._imports"]
known-first-party = ["pymedphys"]


[tool.pyright]
include = ["lib/pymedphys"]

# These have been set to False in order to be able to utilise pyright, but
# future work would be to iteratively set these to true and fix the code base.
reportMissingImports = false
reportGeneralTypeIssues = false
reportUnboundVariable = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false
reportOptionalOperand = false
reportOptionalCall = false
reportOptionalIterable = false
reportPrivateImportUsage = false
reportArgumentType = false
reportCallIssue = false
reportOperatorIssue = false
reportAttributeAccessIssue = false
reportAssignmentType = false
reportIndexIssue = false
reportReturnType = false
reportMissingModuleSource = false
reportTypedDictNotRequiredAccess = false

[build-system]
requires = ["hatchling>=1.26"]
build-backend = "hatchling.build"
