[project]
name = "pymedphys"
version = "0.42.0-dev0"
readme = "README.rst"
description = "Medical Physics library"
authors = [{name = "PyMedPhys Contributors", email = "developers@pymedphys.com"}]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
]
requires-python = ">=3.10,<3.13"
dependencies = [
    "typing-extensions",
    "setuptools",
    "tomlkit",
]

[project.urls]
Homepage = "https://pymedphys.com"
Repository = "https://github.com/pymedphys/pymedphys"
Documentation = "https://docs.pymedphys.com"

[project.scripts]
pymedphys = "pymedphys.__main__:main"

[project.optional-dependencies]
user = [
    "Pillow>=9.0.0",
    "PyYAML",
    "anthropic==0.46.0",
    "anyio",
    "attrs",
    "dash>=2.18.1",
    "dbfread",
    "dicompyler-core",
    "imageio[tifffile]",
    "keyring",
    "matplotlib",
    "natsort",
    "numba",
    "numpy>=1.26",
    "packaging",
    "pandas>=1.0.0",
    "plotly>=5.24.1",
    "pydicom>=2.0.0",
    "pylibjpeg-libjpeg>=1.3.2",
    "pymssql",
    "pynetdicom",
    "python-dateutil",
    "pywin32>=301; sys_platform == 'win32'",
    "requests",
    "scikit-learn",
    "scipy",
    "shapely>=1.7.0",
    "sqlalchemy",
    "streamlit~=1.34.0",
    "timeago",
    "toml",
    "tqdm",
    "trio>=0.25.0",
    "trio-asyncio",
    "watchdog",
    "xmltodict",
]
cli = ["toml"]
comparables = ["flashgamma"]
dev = [
    "doc8",
    "pre-commit",
    "pyright",
    "readme-renderer",
    "rope",
    "ruff",
    "tabulate",
]
dicom = ["pydicom>=2.0.0", "pynetdicom"]
docs = [
    "ipython>=7.31.1",
    "jupyter-book>=0.12.0,<2.0.0",
    "matplotlib",
    "networkx",
    "numba",
    "numpy>=1.26",
    "pydicom>=2.0.0",
    "scipy",
    "sphinx-argparse",
    "sphinx-book-theme",
    "toml",
    "tqdm",
]
doctests = ["ruff", "sphinx-book-theme", "tabulate"]
icom = ["numpy>=1.26"]
mosaiq = [
    "attrs",
    "pandas>=1.0.0",
    "pymssql",
    "scikit-learn",
    "sqlalchemy",
    "toml",
]
propagate = ["ruff"]
tests = [
    "anthropic==0.46.0",
    "astroid",
    "numba",
    "psutil",
    "pylint",
    "pytest",
    "pytest-rerunfailures",
    "pytest-sugar",
    "python-dateutil",
    "tqdm",
]
all = [
    "Pillow>=9.0.0",
    "PyYAML",
    "anthropic==0.46.0",
    "anyio",
    "astroid",
    "attrs",
    "dash>=2.18.1",
    "dbfread",
    "dicompyler-core",
    "doc8",
    "imageio[tifffile]",
    "ipython>=7.31.1",
    "jupyter-book>=0.12.0,<2.0.0",
    "keyring",
    "matplotlib",
    "natsort",
    "networkx",
    "numba",
    "numpy>=1.26",
    "packaging",
    "pandas>=1.0.0",
    "plotly>=5.24.1",
    "pre-commit",
    "psutil",
    "pydicom>=2.0.0",
    "pylibjpeg-libjpeg>=1.3.2",
    "pylint",
    "pymssql",
    "pynetdicom",
    "pyright",
    "pytest",
    "pytest-rerunfailures",
    "pytest-sugar",
    "python-dateutil",
    "pywin32>=301; sys_platform == 'win32'",
    "readme-renderer",
    "requests",
    "rope",
    "ruff",
    "scikit-learn",
    "scipy",
    "shapely>=1.7.0",
    "sphinx-argparse",
    "sphinx-book-theme",
    "sqlalchemy",
    "streamlit~=1.34.0",
    "tabulate",
    "timeago",
    "toml",
    "tqdm",
    "trio>=0.25.0",
    "trio-asyncio",
    "watchdog",
    "xmltodict",
]

[tool.uv]
managed = true
dev-dependencies = [
    "pygithub>=2.3.0",
    "sphinx-external-toc>=1.0.1",
]

[tool.ruff.lint]
# These were the existing issues when first migrating to ruff, we can feel
# free to remove these an iteratively tighten the belt if so desired.
extend-ignore = [
    # "F401", # imported but unused
    # "E741", # Ambiguous variable name
    # "E722", # Do not use bare `except`
]


[tool.ruff.lint.isort]
known-third-party = ["pymedphys._imports"]
known-first-party = ["pymedphys"]

[tool.pyright]
include = ["lib/pymedphys"]

# These have been set to False in order to be able to utilise pyright, but
# future work would be to iteratively set these to true and fix the code base.
reportMissingImports = false
reportGeneralTypeIssues = false
reportUnboundVariable = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false
reportOptionalOperand = false
reportOptionalCall = false
reportOptionalIterable = false
reportPrivateImportUsage = false
reportArgumentType = false
reportCallIssue = false
reportOperatorIssue = false
reportAttributeAccessIssue = false
reportAssignmentType = false
reportIndexIssue = false
reportReturnType = false
reportMissingModuleSource = false
reportTypedDictNotRequiredAccess = false

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
sources = [{path = "lib"}]
packages = ["pymedphys"]
include = ["lib/pymedphys/docs/_build/html/**/*"]